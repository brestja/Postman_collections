{
	"info": {
		"_postman_id": "1bcec394-d924-4a70-8cac-0cecb07b3a2c",
		"name": "NFT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18107576"
	},
	"item": [
		{
			"name": "Collections",
			"item": [
				{
					"name": "Create collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Payload has all properties\", ()=> {\r",
									"    pm.expect(response.payload.identifier).to.have.lengthOf(50);\r",
									"    \r",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiI0VmtFWUg2RXlpV3VLdUdINlArQ0JkZDd5MnZ1RHJtczk4WU04YlpZQTBNPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJlMDY1ZmFhNS1lYWU0LTQzNWItYThiMC1kNTA1NjliZmJmOTEiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfMDZuc1dUaW50IiwiY29nbml0bzp1c2VybmFtZSI6ImUwNjVmYWE1LWVhZTQtNDM1Yi1hOGIwLWQ1MDU2OWJmYmY5MSIsIm9yaWdpbl9qdGkiOiJlZGY0OWE4ZC1mNDQxLTQ2YWEtODU1NC1iZjhlY2ZjZmM5ZjUiLCJhdWQiOiI3bHBqdGR2NzMxaWVncW0xbnZibzFxMjdsMyIsImV2ZW50X2lkIjoiYTVhZTI0NTUtNTQzMC00YzA2LWJmMzAtOGIyYjkxZmU4OTU4IiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE2NjU2Njc2MDQsImV4cCI6MTY2NjQ2NTQwNiwiaWF0IjoxNjY2NDYxODA2LCJqdGkiOiJlZTMxNGJiOC0xYWU3LTRlMDctYTE3Yy0zN2FiZTc4ZTVjZjkiLCJlbWFpbCI6Impvc2VicmVzdDI1QGdtYWlsLmNvbSJ9.v4412Z45_SGbR4OBu_dOlcrewTT2bOKYsQ43edIcdIacEdSBkxYUSJV2JxO1oK0Om-G6ScKbar6Y-SvJwsyRPoLpjDyRgBbGnPVO1a7NnKClb-j6EWZMcAVjK6yoLottQmpKtTJStvQ25vAi9bpL42u5wdGxQbJFZxHW0dmPxVjtO5uLWPLd7IlXv3Q3C61m1CtWCEZ0tZS6AD-9GyCS63Jue9lUIwJ89483dl9rGtyfAIJXC9KOh7d3xMBKcRA9A9YJlERbrJEXOT8J4-j9V4FGtM58kwWjljSB5X3bgZclEAEfC6FZ6RYpFbWqF4h8uAabnPmeaSV5U5alaSi61g",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{devNft}}/collection",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"collection"
							]
						}
					},
					"response": [
						{
							"name": "Create collection",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"address\":\"0xc0653f60859648e66b7c46ea8d0a8eb67988e718\",\r\n    \"blockchain\":\"bsctest\",\r\n    \"description\":\"Default collection of events\",\r\n    \"kind\":\"event\",\r\n    \"name\":\"Default Events\",\r\n    \"owner\":\"0x4a9e0fcdd826af2b235c69fc4e2ee03cdbb82632\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{devNft}}/collection",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"collection"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 200,\n    \"description\": \"Successful request\",\n    \"payload\": {\n        \"identifier\": \"bsctest~0xc0653f60859648e66b7c46ea8d0a8eb67988e718\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get collection by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Metadata has all keys\", ()=> {\r",
									"    pm.expect(response.identifier).to.have.lengthOf(50);\r",
									"    pm.expect(response.blockchain).to.be.oneOf([\"bsctest\", \"eth\"]);\r",
									"    pm.expect(response.address).to.have.lengthOf(42);\r",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiI0VmtFWUg2RXlpV3VLdUdINlArQ0JkZDd5MnZ1RHJtczk4WU04YlpZQTBNPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJlMDY1ZmFhNS1lYWU0LTQzNWItYThiMC1kNTA1NjliZmJmOTEiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfMDZuc1dUaW50IiwiY29nbml0bzp1c2VybmFtZSI6ImUwNjVmYWE1LWVhZTQtNDM1Yi1hOGIwLWQ1MDU2OWJmYmY5MSIsIm9yaWdpbl9qdGkiOiJlZGY0OWE4ZC1mNDQxLTQ2YWEtODU1NC1iZjhlY2ZjZmM5ZjUiLCJhdWQiOiI3bHBqdGR2NzMxaWVncW0xbnZibzFxMjdsMyIsImV2ZW50X2lkIjoiYTVhZTI0NTUtNTQzMC00YzA2LWJmMzAtOGIyYjkxZmU4OTU4IiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE2NjU2Njc2MDQsImV4cCI6MTY2NjA1NDcyNSwiaWF0IjoxNjY2MDUxMTI1LCJqdGkiOiIwYmQxMGRmNi0wMWVlLTQ0YTUtODZjOS03ZmVlYzlkMjhhN2EiLCJlbWFpbCI6Impvc2VicmVzdDI1QGdtYWlsLmNvbSJ9.RJQwIs5k8Izsn4jfDZjsXP6ptzgODRaNwgant_BzGvsUgk3PZy7yzcx6N3gN3ZfBVBm2SlZNSuVmXJo2JEr97HIYdH-KnI8h7MeKNCokaXC2K55Fuqwv6BprcKY9FVzL4BorLDfxw_ifGGGrI089BVFPyNe0LqyrL-K-CNQQ07R01TU3dzjX2jQdG-iWYrWOeBOyGpC6s4r8hitqx2iY86Hkwl4LyS4x6N6FFb3Mr_U62hL5oufEfcRYyA5zMFlw1hIZ6YG1ifVT0yeuNe8Icd_MxzeGT50VQ3M1KnoRRaJhx5E_Sjo9lYWvn_EjQDk92xGRJfOf5u49vRbzBPrCEA",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{devNft}}/collection/:identifier",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"collection",
								":identifier"
							],
							"variable": [
								{
									"key": "identifier",
									"value": "bsctest~0xc0653f60859648e66b7c46ea8d0a8eb67988e718"
								}
							]
						},
						"description": "Returns a collection by the given Id"
					},
					"response": [
						{
							"name": "Get collection by id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{devNft}}/collection/:identifier",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"collection",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "bsctest~0xc0653f60859648e66b7c46ea8d0a8eb67988e718"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"blockchain\": \"bsctest\",\n    \"kind\": \"event\",\n    \"identifier\": \"bsctest~0xc0653f60859648e66b7c46ea8d0a8eb67988e718\",\n    \"owner\": \"0x4a9e0fcdd826af2b235c69fc4e2ee03cdbb82632\",\n    \"user_sub\": \"bc7b9f74-5735-4818-aca9-fb50054679cf\",\n    \"address\": \"0xc0653f60859648e66b7c46ea8d0a8eb67988e718\",\n    \"description\": \"Default collection of events\",\n    \"name\": \"Default Events\"\n}"
						}
					]
				},
				{
					"name": "Update collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful request\", ()=> {\r",
									"    pm.expect(response.description).to.eql(\"Successful request\");\r",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiI0VmtFWUg2RXlpV3VLdUdINlArQ0JkZDd5MnZ1RHJtczk4WU04YlpZQTBNPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJlMDY1ZmFhNS1lYWU0LTQzNWItYThiMC1kNTA1NjliZmJmOTEiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfMDZuc1dUaW50IiwiY29nbml0bzp1c2VybmFtZSI6ImUwNjVmYWE1LWVhZTQtNDM1Yi1hOGIwLWQ1MDU2OWJmYmY5MSIsIm9yaWdpbl9qdGkiOiJlZGY0OWE4ZC1mNDQxLTQ2YWEtODU1NC1iZjhlY2ZjZmM5ZjUiLCJhdWQiOiI3bHBqdGR2NzMxaWVncW0xbnZibzFxMjdsMyIsImV2ZW50X2lkIjoiYTVhZTI0NTUtNTQzMC00YzA2LWJmMzAtOGIyYjkxZmU4OTU4IiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE2NjU2Njc2MDQsImV4cCI6MTY2NjA1NDcyNSwiaWF0IjoxNjY2MDUxMTI1LCJqdGkiOiIwYmQxMGRmNi0wMWVlLTQ0YTUtODZjOS03ZmVlYzlkMjhhN2EiLCJlbWFpbCI6Impvc2VicmVzdDI1QGdtYWlsLmNvbSJ9.RJQwIs5k8Izsn4jfDZjsXP6ptzgODRaNwgant_BzGvsUgk3PZy7yzcx6N3gN3ZfBVBm2SlZNSuVmXJo2JEr97HIYdH-KnI8h7MeKNCokaXC2K55Fuqwv6BprcKY9FVzL4BorLDfxw_ifGGGrI089BVFPyNe0LqyrL-K-CNQQ07R01TU3dzjX2jQdG-iWYrWOeBOyGpC6s4r8hitqx2iY86Hkwl4LyS4x6N6FFb3Mr_U62hL5oufEfcRYyA5zMFlw1hIZ6YG1ifVT0yeuNe8Icd_MxzeGT50VQ3M1KnoRRaJhx5E_Sjo9lYWvn_EjQDk92xGRJfOf5u49vRbzBPrCEA",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{devNft}}/collection/:identifier",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"collection",
								":identifier"
							],
							"variable": [
								{
									"key": "identifier",
									"value": "bsctest~0xc0653f60859648e66b7c46ea8d0a8eb67988e718"
								}
							]
						},
						"description": "Updates a collection by the given Id"
					},
					"response": [
						{
							"name": "Update a collection",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"address\":\"0xc0653f60859648e66b7c46ea8d0a8eb67988e717\",\r\n    \"blockchain\":\"bsctest\",\r\n    \"description\":\"Default collection of events\",\r\n    \"kind\":\"event\",\r\n    \"name\":\"Default Events\",\r\n    \"owner\":\"0x4a9e0fcdd826af2b235c69fc4e2ee03cdbb82633\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{devNft}}/collection/:identifier",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"collection",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "bsctest~0xc0653f60859648e66b7c46ea8d0a8eb67988e718"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 200,\n    \"description\": \"Successful request\"\n}"
						}
					]
				},
				{
					"name": "Deletes a  collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful request\", ()=> {\r",
									"    pm.expect(response.description).to.eql(\"Successful request\");\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{devNft}}/collection/:identifier",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"collection",
								":identifier"
							],
							"variable": [
								{
									"key": "identifier",
									"value": "bsctest~0xc0653f60859648e66b7c46ea8d0a8eb67988e717"
								}
							]
						},
						"description": "Deletes a collection by the given Id"
					},
					"response": [
						{
							"name": "Deletes a collection",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{devNft}}/collection/:identifier",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"collection",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "bsctest~0xc0653f60859648e66b7c46ea8d0a8eb67988e717"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 200,\n    \"description\": \"Successful request\"\n}"
						}
					]
				},
				{
					"name": "Get collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Results has all keys\", ()=> {\r",
									"    for(let i = 0; i < response.results.length; i ++){\r",
									"        pm.expect(response.results[i].identifier).to.have.lengthOf(50);\r",
									"        pm.expect(response.results[i].blockchain).to.be.oneOf([\"bsctest\", \"eth\"]);\r",
									"        pm.expect(response.results[i].address).to.have.lengthOf(42);\r",
									"    }\r",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{devNft}}/collection/me?from=0&size=16",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"collection",
								"me"
							],
							"query": [
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "size",
									"value": "16"
								}
							]
						},
						"description": "Returns a collection by the given identifier"
					},
					"response": [
						{
							"name": "Me",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{devNft}}/collection/me?from=0&size=16",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"collection",
										"me"
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "size",
											"value": "16"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 2,\n    \"results\": [\n        {\n            \"owner\": \"0x4a9e0fcdd826af2b235c69fc4e2ee03cdbb82632\",\n            \"identifier\": \"bsctest~0xc0653f60859648e66b7c46ea8d0a8eb67988e716\",\n            \"address\": \"0xc0653f60859648e66b7c46ea8d0a8eb67988e716\",\n            \"blockchain\": \"bsctest\",\n            \"kind\": \"event\",\n            \"name\": \"Default Events\",\n            \"description\": \"Default collection of events\"\n        },\n        {\n            \"owner\": \"0x4a9e0fcdd826af2b235c69fc4e2ee03cdbb82632\",\n            \"identifier\": \"bsctest~0x88590434f129f246a94c19fc6af61115e6091bf4\",\n            \"image\": \"https://nft.assets.dev.euler.tools/collection/bsctest~0x88590434f129f246a94c19fc6af61115e6091bf4/image.png\",\n            \"address\": \"0x88590434f129f246a94c19fc6af61115e6091bf4\",\n            \"blockchain\": \"bsctest\",\n            \"kind\": \"event\",\n            \"name\": \"BNB Testnet Event\",\n            \"banner\": \"https://nft.assets.dev.euler.tools/collection/bsctest~0x88590434f129f246a94c19fc6af61115e6091bf4/banner.png\",\n            \"description\": \"Default collection of events\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get nft me",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Results has all keys\", ()=> {\r",
									"    for(let i = 0; i < response.results.length; i ++){\r",
									"        pm.expect(response.results[i].identifier).to.have.lengthOf(36);\r",
									"        pm.expect(response.results[i].blockchain).to.be.oneOf([\"bsctest\", \"eth\"]);\r",
									"        pm.expect(response.results[i].address).to.have.lengthOf(42);\r",
									"    }\r",
									"});\r",
									"pm.test(\"Metadata has all keys\", ()=> {\r",
									"    for(let i = 0; i < response.results.length; i ++){\r",
									"    pm.expect(Object.keys(response.results[i].metadata)).to.eql([\"name\", \"description\", \"attributes\", \"event\"]);\r",
									"    }\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{devNft}}/collection/:identifier/nfts/me?from=0&size=16",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"collection",
								":identifier",
								"nfts",
								"me"
							],
							"query": [
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "size",
									"value": "16"
								}
							],
							"variable": [
								{
									"key": "identifier",
									"value": ""
								}
							]
						},
						"description": "Returns a collection by the given identifier"
					},
					"response": [
						{
							"name": "nfts-me",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{devNft}}/collection/:identifier/nfts/me?from=0&size=16",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"collection",
										":identifier",
										"nfts",
										"me"
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "size",
											"value": "16"
										}
									],
									"variable": [
										{
											"key": "identifier",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 1,\n    \"results\": [\n        {\n            \"identifier\": \"1dd70929-3084-4ab0-99fa-e7edc8095e92\",\n            \"metadata\": {\n                \"name\": \"Event BNBChainES\",\n                \"description\": \"Event of day 26th May in @BNBChainES\",\n                \"attributes\": {\n                    \"location\": \"https://t.me/BNBChainES\",\n                    \"date_to\": 1656280800000,\n                    \"date_from\": 1656266400000\n                },\n                \"event\": {\n                    \"max_total_supply\": 2500,\n                    \"end_date_mint\": 1659139200000,\n                    \"start_date_mint\": 1656266400000\n                }\n            },\n            \"token_uri\": \"https://nft.api.dev.euler.tools/nft/1dd70929-3084-4ab0-99fa-e7edc8095e92/info.json\",\n            \"address\": \"0xe0b1038f526e08b1115736306c02bcb70d08e59c\",\n            \"token_id\": \"21\",\n            \"blockchain\": \"bsctest\",\n            \"kind\": \"event\",\n            \"collection\": \"bsctest~0xe0b1038f526e08b1115736306c02bcb70d08e59c\",\n            \"claim_words\": \"Hermandad del cangrejo\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Search collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Results has all keys\", ()=> {\r",
									"    for(let i = 0; i < response.results.length; i ++){\r",
									"        pm.expect(response.results[i].blockchain).to.be.oneOf([\"bsctest\", \"eth\"]);\r",
									"        pm.expect(response.results[i].address).to.have.lengthOf(42);\r",
									"    }\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{devNft}}/collection/search",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"collection",
								"search"
							]
						}
					},
					"response": [
						{
							"name": "Search Collection",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"query\":{\r\n        \"query\":{\r\n            \"bool\":{\r\n                \"must\":[\r\n                    {\r\n                        \"multi_match\":{\r\n                            \"query\":\"BNB\",\r\n                            \"fields\":[\r\n                                \"address\",\r\n                                \"name\",\r\n                                \"description\",\r\n                                \"kind\"\r\n                            ]\r\n                        }\r\n                    }\r\n                ],\r\n                \"filter\":[\r\n                    {\r\n                        \"term\":{\r\n                            \"blockchain\":\"bsctest\"\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{devNft}}/collection/search",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"collection",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 1,\n    \"results\": [\n        {\n            \"address\": \"0x88590434f129f246a94c19fc6af61115e6091bf4\",\n            \"blockchain\": \"bsctest\",\n            \"kind\": \"event\",\n            \"name\": \"BNB Testnet Event\",\n            \"description\": \"Default collection of events\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Nft",
			"item": [
				{
					"name": "Create nft",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Payload has all properties\", ()=> {\r",
									"    pm.expect(response.payload.identifier).to.have.lengthOf(36);\r",
									"    pm.expect(response.payload.token_uri).to.include(\"https://\");\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"blockchain\": \"bsctest\",\n \"address\": \"0xe0b1038f526e08b1115736306c02bcb70d08e59c\",\n \"kind\": \"event\",\n \"token_id\": \"22\",\n \"metadata\": {\n  \"name\": \"Event BNBChainES\",\n  \"description\": \"Event of day 26th May in @BNBChainES\",\n  \"attributes\": {\n   \"location\": \"https://t.me/BNBChainES\",\n   \"date_from\": 1656266400000,\n   \"date_to\": 1656280800000\n  },\n  \"event\": {\n   \"start_date_mint\": 1656266400000,\n   \"end_date_mint\": 1659139200000,\n   \"max_total_supply\": 2500\n  }\n },\n \"claim_words\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{devNft}}/nft",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"nft"
							]
						}
					},
					"response": [
						{
							"name": "Create nft",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"blockchain\":\"bsctest\",\r\n        \"address\":\"0xe0b1038f526e08b1115736306c02bcb70d08e59c\",\r\n        \"kind\": \"event\",\r\n        \"token_id\": \"22\",\r\n        \"metadata\":{\r\n          \"name\":\"Event BNBChainES\",\r\n          \"description\":\"Event of day 26th May in @BNBChainES\",\r\n          \"attributes\":{\r\n              \"location\":\"https://t.me/BNBChainES\",\r\n              \"date_from\":1656266400000,\r\n              \"date_to\":1656280800000\r\n               },\r\n          \"event\":{\r\n             \"start_date_mint\":1656266400000,\r\n             \"end_date_mint\":1659139200000,\r\n             \"max_total_supply\":2500\r\n              }\r\n          },\r\n           \"claim_words\":\"Hermandad del cangrejo\"\r\n       }\r\n       ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{devNft}}/nft",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"nft"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 200,\n    \"description\": \"Successful request\",\n    \"payload\": {\n        \"identifier\": \"262dd563-46d6-463b-bedb-4089d5466d90\",\n        \"token_uri\": \"https://nft.api.dev.euler.tools/nft/262dd563-46d6-463b-bedb-4089d5466d90/info.json\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get nft by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Metadata has all keys\", ()=> {\r",
									"    pm.expect(Object.keys(response.metadata)).to.eql([\"name\", \"description\", \"attributes\", \"event\"]);\r",
									"});\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{devNft}}/nft/:identifier",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"nft",
								":identifier"
							],
							"variable": [
								{
									"key": "identifier",
									"value": "262dd563-46d6-463b-bedb-4089d5466d90"
								}
							]
						},
						"description": "Returns nft by the given Id"
					},
					"response": [
						{
							"name": "Get nft by id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{devNft}}/nft/:identifier",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"nft",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "262dd563-46d6-463b-bedb-4089d5466d90"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"metadata\": {\n        \"name\": \"Event BNBChainES\",\n        \"description\": \"Event of day 26th May in @BNBChainES\",\n        \"attributes\": {\n            \"location\": \"https://t.me/BNBChainES\",\n            \"date_from\": 1656266400000,\n            \"date_to\": 1656280800000\n        },\n        \"event\": {\n            \"start_date_mint\": 1656266400000,\n            \"max_total_supply\": 2500,\n            \"end_date_mint\": 1659139200000\n        }\n    },\n    \"blockchain\": \"bsctest\",\n    \"collection\": \"bsctest~0xe0b1038f526e08b1115736306c02bcb70d08e59c\",\n    \"kind\": \"event\",\n    \"identifier\": \"262dd563-46d6-463b-bedb-4089d5466d90\",\n    \"token_uri\": \"https://nft.api.dev.euler.tools/nft/262dd563-46d6-463b-bedb-4089d5466d90/info.json\",\n    \"claim_words\": \"Hermandad del cangrejo\",\n    \"user_sub\": \"bc7b9f74-5735-4818-aca9-fb50054679cf\",\n    \"address\": \"0xe0b1038f526e08b1115736306c02bcb70d08e59c\",\n    \"token_id\": \"22\"\n}"
						}
					]
				},
				{
					"name": "Update nft",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful request\", ()=> {\r",
									"    pm.expect(response.description).to.eql(\"Successful request\");\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{devNft}}/nft/:identifier",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"nft",
								":identifier"
							],
							"variable": [
								{
									"key": "identifier",
									"value": "74a41557-7fa7-438e-a174-69a4808c2c86"
								}
							]
						},
						"description": "Returns nft by the given Id"
					},
					"response": [
						{
							"name": "Update nft",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token_id\": \"-1\"\r\n}\r\n    ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{devNft}}/nft/:identifier",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"nft",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "74a41557-7fa7-438e-a174-69a4808c2c86"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 200,\n    \"description\": \"Successful request\"\n}"
						}
					]
				},
				{
					"name": "Delete nft",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful request\", ()=> {\r",
									"    pm.expect(response.description).to.eql(\"Successful request\");\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{devNft}}/nft/:identifier",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"nft",
								":identifier"
							],
							"variable": [
								{
									"key": "identifier",
									"value": "bsctest~0xe0b1038f526e08b1115736306c02bcb70d08e59c"
								}
							]
						},
						"description": "Deletes nft"
					},
					"response": [
						{
							"name": "Delete nft",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{devNft}}/nft/:identifier",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"nft",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "bsctest~0xe0b1038f526e08b1115736306c02bcb70d08e59c"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 200,\n    \"description\": \"Successful request\"\n}"
						}
					]
				},
				{
					"name": "Get nft me",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Metadata has all keys\", ()=> {\r",
									"    pm.expect(response.results[0].identifier).to.have.lengthOf(36);\r",
									"    pm.expect(Object.keys(response.results[0].metadata)).to.eql([\"name\", \"description\", \"attributes\", \"event\"]);\r",
									"});\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{devNft}}/nft/me",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"nft",
								"me"
							]
						},
						"description": "returns the nft of the related account"
					},
					"response": [
						{
							"name": "Me",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{devNft}}/nft/me",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"nft",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 2,\n    \"results\": [\n        {\n            \"identifier\": \"262dd563-46d6-463b-bedb-4089d5466d90\",\n            \"metadata\": {\n                \"name\": \"Event BNBChainES\",\n                \"description\": \"Event of day 26th May in @BNBChainES\",\n                \"attributes\": {\n                    \"location\": \"https://t.me/BNBChainES\",\n                    \"date_to\": 1656280800000,\n                    \"date_from\": 1656266400000\n                },\n                \"event\": {\n                    \"max_total_supply\": 2500,\n                    \"end_date_mint\": 1659139200000,\n                    \"start_date_mint\": 1656266400000\n                }\n            },\n            \"token_uri\": \"https://nft.api.dev.euler.tools/nft/262dd563-46d6-463b-bedb-4089d5466d90/info.json\",\n            \"address\": \"0xe0b1038f526e08b1115736306c02bcb70d08e59c\",\n            \"token_id\": \"22\",\n            \"blockchain\": \"bsctest\",\n            \"kind\": \"event\",\n            \"collection\": \"bsctest~0xe0b1038f526e08b1115736306c02bcb70d08e59c\",\n            \"claim_words\": \"Hermandad del cangrejo\"\n        },\n        {\n            \"identifier\": \"1dd70929-3084-4ab0-99fa-e7edc8095e92\",\n            \"metadata\": {\n                \"name\": \"Event BNBChainES\",\n                \"description\": \"Event of day 26th May in @BNBChainES\",\n                \"attributes\": {\n                    \"location\": \"https://t.me/BNBChainES\",\n                    \"date_to\": 1656280800000,\n                    \"date_from\": 1656266400000\n                },\n                \"event\": {\n                    \"max_total_supply\": 2500,\n                    \"end_date_mint\": 1659139200000,\n                    \"start_date_mint\": 1656266400000\n                }\n            },\n            \"token_uri\": \"https://nft.api.dev.euler.tools/nft/1dd70929-3084-4ab0-99fa-e7edc8095e92/info.json\",\n            \"address\": \"0xe0b1038f526e08b1115736306c02bcb70d08e59c\",\n            \"token_id\": \"21\",\n            \"blockchain\": \"bsctest\",\n            \"kind\": \"event\",\n            \"collection\": \"bsctest~0xe0b1038f526e08b1115736306c02bcb70d08e59c\",\n            \"claim_words\": \"Hermandad del cangrejo\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get nft blockchain",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response has all keys\", ()=> {\r",
									"    pm.expect(response.address).to.have.lengthOf(42);\r",
									"});\r",
									"pm.test(\"Metadata has all keys\", ()=> {\r",
									"    pm.expect(Object.keys(response.metadata)).to.eql([\"image\", \"attributes\"]);\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{devNft}}/:blockchain/nft/:address/:token_id",
							"host": [
								"{{devNft}}"
							],
							"path": [
								":blockchain",
								"nft",
								":address",
								":token_id"
							],
							"variable": [
								{
									"key": "blockchain",
									"value": "eth"
								},
								{
									"key": "address",
									"value": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d"
								},
								{
									"key": "token_id",
									"value": "2475"
								}
							]
						},
						"description": "Returns nft blockchain"
					},
					"response": [
						{
							"name": "blockchain",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{devNft}}/:blockchain/nft/:address/:token_id",
									"host": [
										"{{devNft}}"
									],
									"path": [
										":blockchain",
										"nft",
										":address",
										":token_id"
									],
									"variable": [
										{
											"key": "blockchain",
											"value": "eth"
										},
										{
											"key": "address",
											"value": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d"
										},
										{
											"key": "token_id",
											"value": "2475"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"blockchain\": \"eth\",\n    \"address\": \"0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d\",\n    \"token_id\": \"2475\",\n    \"kind\": \"other\",\n    \"token_uri\": \"https://ipfs.io/ipfs/QmeSjSinHpPnmXmspMjwiXyN6zS4E9zccariGR3jxcaWtq/2475\",\n    \"metadata\": {\n        \"image\": \"https://ipfs.io/ipfs/QmV7JEWPVgETvLP8TF9i88UX1y3MzuHwq1nDjzBZmNoruj\",\n        \"attributes\": [\n            {\n                \"trait_type\": \"Eyes\",\n                \"value\": \"Eyepatch\"\n            },\n            {\n                \"trait_type\": \"Clothes\",\n                \"value\": \"Caveman Pelt\"\n            },\n            {\n                \"trait_type\": \"Fur\",\n                \"value\": \"Black\"\n            },\n            {\n                \"trait_type\": \"Mouth\",\n                \"value\": \"Bored\"\n            },\n            {\n                \"trait_type\": \"Background\",\n                \"value\": \"Army Green\"\n            },\n            {\n                \"trait_type\": \"Hat\",\n                \"value\": \"Fez\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get info json",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Results has all keys\", ()=> {\r",
									"    for(let i = 1; i < response.attributes.length; i ++){\r",
									"        pm.expect(response.attributes[i].name).to.be.string;\r",
									"        pm.expect(response.attributes[i].value).to.be.not.be.empty;\r",
									"        pm.expect(response.attributes[i].trait_type).to.be.string;\r",
									"        \r",
									"    }\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{devNft}}/nft/:identifier/info.json",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"nft",
								":identifier",
								"info.json"
							],
							"variable": [
								{
									"key": "identifier",
									"value": "74a41557-7fa7-438e-a174-69a4808c2c86"
								}
							]
						},
						"description": "Returns nft info json by the given identifier"
					},
					"response": [
						{
							"name": "info json",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{devNft}}/nft/:identifier/info.json",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"nft",
										":identifier",
										"info.json"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "74a41557-7fa7-438e-a174-69a4808c2c86"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"Event BNBChainES\",\n    \"description\": \"Event of day 26th May in @BNBChainES\",\n    \"attributes\": [\n        {\n            \"name\": \"location\",\n            \"value\": \"https://t.me/BNBChainES\",\n            \"trait_type\": \"Location\"\n        },\n        {\n            \"name\": \"date_from\",\n            \"display_type\": \"date\",\n            \"value\": \"1546360800\",\n            \"trait_type\": \"Date From\"\n        },\n        {\n            \"name\": \"date_to\",\n            \"display_type\": \"date\",\n            \"value\": \"1546360800\",\n            \"trait_type\": \"Date To\"\n        },\n        {\n            \"name\": \"virtual_event\",\n            \"display_type\": \"boolean\",\n            \"value\": \"true\",\n            \"trait_type\": \"Virtual event\"\n        },\n        {\n            \"name\": \"website\",\n            \"display_type\": \"url\",\n            \"value\": \"https://t.me/BNBChainES\",\n            \"trait_type\": \"Website\"\n        }\n    ],\n    \"event\": {\n        \"start_date_mint\": 1656266400,\n        \"max_total_supply\": 2500,\n        \"end_date_mint\": 1659139200\n    }\n}"
						}
					]
				},
				{
					"name": "Search nft collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Results has all keys\", ()=> {\r",
									"    for(let i = 1; i < response.results[i].length; i ++){\r",
									"        pm.expect(Object.keys(response.results[i].metadata)).to.eql([\"name\", \"description\", \"attributes\", \"event\"]);\r",
									"     }\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"query\": {\n  \"query\": {\n   \"bool\": {\n    \"filter\": [\n     {\n      \"match_phrase\": {\n       \"kind\": \"generic-managed\"\n      }\n     },\n     {\n      \"match_phrase\": {\n       \"user_sub\": \"3a775d06-3e4d-4db9-95ef-fc1e288b55ba\"\n      }\n     }\n    ]\n   }\n  }\n },\n \"size\": 16,\n \"limit\": \"0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{devNft}}/nft/search",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"nft",
								"search"
							]
						}
					},
					"response": [
						{
							"name": "Search nft",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"query\":{\r\n        \"query\":{\r\n            \"bool\":{\r\n                \"must\":[\r\n                    {\r\n                        \"multi_match\":{\r\n                            \"query\":\"BNBChainES\",\r\n                            \"fields\":[\r\n                                \"metadata.description\"\r\n                            ]\r\n                        }\r\n                    }\r\n                ],\r\n                \"filter\":[\r\n                    {\r\n                        \"term\":{\r\n                            \"blockchain\":\"bsctest\"\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n  \"from\": 0,\r\n  \"size\": 16\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{devNft}}/nft/search",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"nft",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 3,\n    \"results\": [\n        {\n            \"metadata\": {\n                \"name\": \"Event BNBChainES\",\n                \"description\": \"Event of day 26th May in @BNBChainES\",\n                \"attributes\": {\n                    \"location\": \"https://t.me/BNBChainES\",\n                    \"date_to\": 1656280800000,\n                    \"date_from\": 1656266400000\n                },\n                \"event\": {\n                    \"max_total_supply\": 2500,\n                    \"end_date_mint\": 1659139200000,\n                    \"start_date_mint\": 1656266400000\n                }\n            },\n            \"token_uri\": \"https://nft.api.dev.euler.tools/nft/1dd70929-3084-4ab0-99fa-e7edc8095e92/info.json\",\n            \"address\": \"0xe0b1038f526e08b1115736306c02bcb70d08e59c\",\n            \"token_id\": \"21\",\n            \"blockchain\": \"bsctest\",\n            \"kind\": \"event\"\n        },\n        {\n            \"metadata\": {\n                \"image\": \"https://nft.assets.dev.euler.tools/nft/c08f7a84-1286-4f8d-86bc-78a15beaa7af/image.png\",\n                \"name\": \"Event BNBChainES\",\n                \"description\": \"Event of day 26th May in @BNBChainES\",\n                \"attributes\": {\n                    \"location\": \"https://t.me/BNBChainES\",\n                    \"date_to\": 1656280800000,\n                    \"date_from\": 1656266400000\n                },\n                \"event\": {\n                    \"max_total_supply\": 2500,\n                    \"end_date_mint\": 1659139200000,\n                    \"start_date_mint\": 1656266400000\n                }\n            },\n            \"token_uri\": \"https://nft.api.dev.euler.tools/nft/c08f7a84-1286-4f8d-86bc-78a15beaa7af/info.json\",\n            \"address\": \"0x88590434f129f246a94c19fc6af61115e6091bf4\",\n            \"blockchain\": \"bsctest\",\n            \"kind\": \"event\"\n        },\n        {\n            \"metadata\": {\n                \"name\": \"Event BNBChainES\",\n                \"description\": \"Event of day 26th May in @BNBChainES\",\n                \"attributes\": {\n                    \"location\": \"https://t.me/BNBChainES\",\n                    \"date_to\": 1656280800000,\n                    \"date_from\": 1656266400000\n                },\n                \"event\": {\n                    \"max_total_supply\": 2500,\n                    \"end_date_mint\": 1659139200000,\n                    \"start_date_mint\": 1656266400000\n                }\n            },\n            \"token_uri\": \"https://nft.api.dev.euler.tools/nft/262dd563-46d6-463b-bedb-4089d5466d90/info.json\",\n            \"address\": \"0xe0b1038f526e08b1115736306c02bcb70d08e59c\",\n            \"token_id\": \"22\",\n            \"blockchain\": \"bsctest\",\n            \"kind\": \"event\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Request_nft",
			"item": [
				{
					"name": "Get receiver",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{devNft}}/:blockchain/request-nft/:address/:token_id/receiver/:receiver",
							"host": [
								"{{devNft}}"
							],
							"path": [
								":blockchain",
								"request-nft",
								":address",
								":token_id",
								"receiver",
								":receiver"
							],
							"variable": [
								{
									"key": "blockchain",
									"value": "bsctest"
								},
								{
									"key": "address",
									"value": "0xe0b1038f526e08b1115736306c02bcb70d08e59c"
								},
								{
									"key": "token_id",
									"value": "1"
								},
								{
									"key": "receiver",
									"value": "0x4a9e0fcdd826af2b235c69fc4e2ee03cdbb82632"
								}
							]
						},
						"description": "Returns a collection by the given receiver"
					},
					"response": [
						{
							"name": "Receiver",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{devNft}}/:blockchain/request-nft/:address/:token_id/receiver/:receiver",
									"host": [
										"{{devNft}}"
									],
									"path": [
										":blockchain",
										"request-nft",
										":address",
										":token_id",
										"receiver",
										":receiver"
									],
									"variable": [
										{
											"key": "blockchain",
											"value": "bsctest"
										},
										{
											"key": "address",
											"value": "0xe0b1038f526e08b1115736306c02bcb70d08e59c"
										},
										{
											"key": "token_id",
											"value": "1"
										},
										{
											"key": "receiver",
											"value": "0x4a9e0fcdd826af2b235c69fc4e2ee03cdbb82632"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"signature\": {\n        \"r\": \"0xf32c2c69491e20d43b853ce277cc8b5616dc465f2cf508ebe8c8725b6f81ee75\",\n        \"s\": \"0x73f39094c8c1849d0a0b879285176da4499cb90e288028201cd66fabadb3a30e\",\n        \"value\": \"0x16a36b715c6dc6bc3cdd64e56a8ce00457897863a6b855f2b84bde2d6968f2aa\",\n        \"signature\": \"0xf32c2c69491e20d43b853ce277cc8b5616dc465f2cf508ebe8c8725b6f81ee7573f39094c8c1849d0a0b879285176da4499cb90e288028201cd66fabadb3a30e1c\",\n        \"v\": \"0x1c\"\n    },\n    \"position\": \"0\",\n    \"data\": {\n        \"tokenId\": \"1\",\n        \"receivers\": [\n            \"0x4a9e0fcdd826af2b235c69fc4e2ee03cdbb82632\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Kind Claim",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{devNft}}/:blockchain/request-nft/:address/:token_id/:kind_claim",
							"host": [
								"{{devNft}}"
							],
							"path": [
								":blockchain",
								"request-nft",
								":address",
								":token_id",
								":kind_claim"
							],
							"variable": [
								{
									"key": "blockchain",
									"value": "bsctest"
								},
								{
									"key": "address",
									"value": "0xe0b1038f526e08b1115736306c02bcb70d08e59c"
								},
								{
									"key": "token_id",
									"value": "1"
								},
								{
									"key": "kind_claim",
									"value": "claim-words"
								}
							]
						},
						"description": "Retur"
					},
					"response": [
						{
							"name": "kind_claim",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n          \"claim_words\": \"Hermandad del cangrejo\",\r\n          \"receiver\": \"0x4a9e0fcdd826af2b235c69fc4e2ee03cdbb82632\"\r\n        }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{devNft}}/:blockchain/request-nft/:address/:token_id/:kind_claim",
									"host": [
										"{{devNft}}"
									],
									"path": [
										":blockchain",
										"request-nft",
										":address",
										":token_id",
										":kind_claim"
									],
									"variable": [
										{
											"key": "blockchain",
											"value": "bsctest"
										},
										{
											"key": "address",
											"value": "0xe0b1038f526e08b1115736306c02bcb70d08e59c"
										},
										{
											"key": "token_id",
											"value": "1"
										},
										{
											"key": "kind_claim",
											"value": "claim-words"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 200,\n    \"description\": \"Successful request\",\n    \"payload\": {\n        \"data\": {\n            \"tokenId\": \"1\",\n            \"receivers\": [\n                \"0x4a9e0fcdd826af2b235c69fc4e2ee03cdbb82632\"\n            ]\n        },\n        \"signature\": {\n            \"value\": \"0x16a36b715c6dc6bc3cdd64e56a8ce00457897863a6b855f2b84bde2d6968f2aa\",\n            \"signature\": \"0xf32c2c69491e20d43b853ce277cc8b5616dc465f2cf508ebe8c8725b6f81ee7573f39094c8c1849d0a0b879285176da4499cb90e288028201cd66fabadb3a30e1c\",\n            \"v\": \"0x1c\",\n            \"r\": \"0xf32c2c69491e20d43b853ce277cc8b5616dc465f2cf508ebe8c8725b6f81ee75\",\n            \"s\": \"0x73f39094c8c1849d0a0b879285176da4499cb90e288028201cd66fabadb3a30e\"\n        },\n        \"position\": \"0\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Address Nft",
			"item": [
				{
					"name": "Get Nft by address",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{devNft}}/bsc/address/:address?size=16&page=1",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"bsc",
								"address",
								":address"
							],
							"query": [
								{
									"key": "size",
									"value": "16"
								},
								{
									"key": "page",
									"value": "1"
								}
							],
							"variable": [
								{
									"key": "address",
									"value": "0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32"
								}
							]
						},
						"description": "Get Nft by the given address"
					},
					"response": [
						{
							"name": "Get Nft by address",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{devNft}}/bsc/address/:address?size=16&page=1",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"bsc",
										"address",
										":address"
									],
									"query": [
										{
											"key": "size",
											"value": "16"
										},
										{
											"key": "page",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "address",
											"value": "0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 7,\n    \"page\": 1,\n    \"limit\": 16,\n    \"cursor\": null,\n    \"result\": [\n        {\n            \"token_address\": \"0xfa9b79769adc9bc9684d770586ed0a3a1074139d\",\n            \"token_id\": \"6\",\n            \"amount\": \"1\",\n            \"owner_of\": \"0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32\",\n            \"token_hash\": \"b107087cdd8bb8d6c1bd399b5645245b\",\n            \"block_number_minted\": \"21706808\",\n            \"block_number\": \"21728048\",\n            \"contract_type\": \"ERC1155\",\n            \"name\": \"Euler Tools Guestbook\",\n            \"symbol\": \"EULERBOOK\",\n            \"token_uri\": \"https://nft.api.prod.euler.tools/nft/50d3ec51-c5bb-4e76-b4c7-3de09e26df4a/info.json\",\n            \"metadata\": {\n                \"name\": \"AWS Iberia Fintech Day 2022\",\n                \"description\": \"Evento de AWS en Madrid el día Miércoles 28 de Septiembre\",\n                \"image\": \"https://nft.assets.prod.euler.tools/nft/50d3ec51-c5bb-4e76-b4c7-3de09e26df4a/image.jpeg\",\n                \"attributes\": [\n                    {\n                        \"name\": \"location\",\n                        \"value\": \"Madrid\",\n                        \"trait_type\": \"Location\"\n                    },\n                    {\n                        \"name\": \"date_from\",\n                        \"display_type\": \"date\",\n                        \"value\": \"Sun, 27 Sep 2020 22:00:00 GMT\",\n                        \"trait_type\": \"Date From\"\n                    },\n                    {\n                        \"name\": \"date_to\",\n                        \"display_type\": \"date\",\n                        \"value\": \"Sun, 27 Sep 2020 22:00:00 GMT\",\n                        \"trait_type\": \"Date To\"\n                    }\n                ],\n                \"setting\": {\n                    \"start_date_mint\": \"Tue, 27 Sep 2022 20:56:00 GMT\",\n                    \"max_total_supply\": \"1000\",\n                    \"end_date_mint\": \"Thu, 27 Oct 2022 20:57:00 GMT\"\n                }\n            },\n            \"last_token_uri_sync\": \"2022-09-27T21:02:19.056Z\",\n            \"last_metadata_sync\": \"2022-09-27T21:02:22.858Z\",\n            \"minter_address\": \"0x4884a0409f5f3748a3dfd3fd662199cdc6b01b2b\"\n        },\n        {\n            \"token_address\": \"0xfa9b79769adc9bc9684d770586ed0a3a1074139d\",\n            \"token_id\": \"5\",\n            \"amount\": \"1\",\n            \"owner_of\": \"0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32\",\n            \"token_hash\": \"a28d7e5a46a0eafbac8fbcb22b5f1ed2\",\n            \"block_number_minted\": \"21134297\",\n            \"block_number\": \"21176158\",\n            \"contract_type\": \"ERC1155\",\n            \"name\": \"Euler Tools Guestbook\",\n            \"symbol\": \"EULERBOOK\",\n            \"token_uri\": \"https://nft.api.prod.euler.tools/nft/c1bcadc7-3c5b-497a-82a2-a605ccda2a4d/info.json\",\n            \"metadata\": {\n                \"name\": \"Partnership with SuperReal\",\n                \"description\": \"Partnership with SuperReal to tokenize the metaverse\",\n                \"image\": \"https://nft.assets.prod.euler.tools/nft/c1bcadc7-3c5b-497a-82a2-a605ccda2a4d/image.png\",\n                \"attributes\": [\n                    {\n                        \"name\": \"location\",\n                        \"value\": \"https://euler.tools/\",\n                        \"trait_type\": \"Location\"\n                    },\n                    {\n                        \"display_type\": \"date\",\n                        \"name\": \"date_from\",\n                        \"value\": \"Tue, 06 Sep 2022 22:00:00 GMT\",\n                        \"trait_type\": \"Date From\"\n                    },\n                    {\n                        \"display_type\": \"date\",\n                        \"name\": \"date_to\",\n                        \"value\": \"Tue, 06 Sep 2022 22:00:00 GMT\",\n                        \"trait_type\": \"Date To\"\n                    }\n                ],\n                \"setting\": {\n                    \"start_date_mint\": \"Tue, 06 Sep 2022 22:00:00 GMT\",\n                    \"max_total_supply\": \"2000\",\n                    \"end_date_mint\": null\n                }\n            },\n            \"last_token_uri_sync\": \"2022-09-07T21:02:37.314Z\",\n            \"last_metadata_sync\": \"2022-09-07T21:02:49.257Z\",\n            \"minter_address\": \"0xfe3804e0fe9ffc75a8c5207f8a876102f1df8d58\"\n        },\n        {\n            \"token_address\": \"0xfa9b79769adc9bc9684d770586ed0a3a1074139d\",\n            \"token_id\": \"4\",\n            \"amount\": \"1\",\n            \"owner_of\": \"0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32\",\n            \"token_hash\": \"5f72f8fca922dc9ce6a72b61665a889b\",\n            \"block_number_minted\": \"20782698\",\n            \"block_number\": \"20785259\",\n            \"contract_type\": \"ERC1155\",\n            \"name\": \"Euler Tools Guestbook\",\n            \"symbol\": \"EULERBOOK\",\n            \"token_uri\": \"https://nft.api.prod.euler.tools/nft/2eaf73ef-9353-4254-ad99-e50dc26e02a7/info.json\",\n            \"metadata\": {\n                \"name\": \"NFT Marketplace Pre-Launch\",\n                \"description\": \"NFT to represent the pre-launch of our NFT marketplace\",\n                \"image\": \"https://nft.assets.prod.euler.tools/nft/2eaf73ef-9353-4254-ad99-e50dc26e02a7/image.png\",\n                \"attributes\": [\n                    {\n                        \"name\": \"location\",\n                        \"value\": \"https://euler.tools/\",\n                        \"trait_type\": \"Location\"\n                    },\n                    {\n                        \"name\": \"date_from\",\n                        \"display_type\": \"date\",\n                        \"value\": \"Wed, 31 Aug 2022 22:00:00 GMT\",\n                        \"trait_type\": \"Date From\"\n                    },\n                    {\n                        \"name\": \"date_to\",\n                        \"display_type\": \"date\",\n                        \"value\": \"Thu, 29 Sep 2022 22:00:00 GMT\",\n                        \"trait_type\": \"Date To\"\n                    }\n                ],\n                \"setting\": {\n                    \"start_date_mint\": \"Wed, 31 Aug 2022 22:00:00 GMT\",\n                    \"max_total_supply\": \"3000\",\n                    \"end_date_mint\": \"Thu, 29 Sep 2022 22:00:00 GMT\"\n                }\n            },\n            \"last_token_uri_sync\": \"2022-08-26T15:27:13.403Z\",\n            \"last_metadata_sync\": \"2022-08-26T15:27:25.469Z\",\n            \"minter_address\": \"0x4c21080cdffc33e54b98ea782c4437f8c50d299c\"\n        },\n        {\n            \"token_address\": \"0xda991621d4f8bcd67c9c8a12cd7d108f7c4df366\",\n            \"token_id\": \"879\",\n            \"amount\": \"1\",\n            \"owner_of\": \"0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32\",\n            \"token_hash\": \"e731abcc27d44879faf26c76ea217eec\",\n            \"block_number_minted\": \"12750998\",\n            \"block_number\": \"12750998\",\n            \"contract_type\": \"ERC1155\",\n            \"name\": \"Paulie\",\n            \"symbol\": null,\n            \"token_uri\": \"https://graphigo.prd.galaxy.eco/metadata/0xdA991621d4F8bcD67c9C8a12Cd7D108f7c4dF366/879.json\",\n            \"metadata\": {\n                \"name\": \"Paulie\",\n                \"description\": \"If you're a member of the Polkastarter community you've been along for the wild ride of IDOs, and watched many projects launch and thrive.\\n\\nNow the journey of Polkastarter continues with our new limited-edition NFT series, “POLS Diamond Hands 2021”! In order to reward the POLS holders who grasped their crystal white-knuckles onto those POLS tokens throughout the (in)famous May 2021 market crash, we are releasing a limited edition NFT. Soooo, meet Paulie! \\n\\nTogether with digital artist Jaime Sobreviela (aka Mr. Kat), we are launching a Diamond Mystery Box today. In it you will find one of two Paulie NFTs that we really like — and we hope you do too!\\n\\nStay tuned for more Polkastarter art, action and future NFT utility, and we’re sure that this piece of crypto history “POLS Diamond Hands 2021” will definitely be a collectors’ item!\",\n                \"image\": \"https://dashboard.mypinata.cloud/ipfs/QmaoxxQYT8szSah4ixc7MAbCyQt17uSvetFye4CBKt9yHz\",\n                \"animation_url\": \"https://d257b89266utxb.cloudfront.net/galaxy/images/polkastarter/1636614881716646193.mp4\",\n                \"background_color\": \"\",\n                \"external_link\": \"https://galaxy.eco/nft/879/0xdA991621d4F8bcD67c9C8a12Cd7D108f7c4dF366\",\n                \"owner\": \"0xC1F4fD1196953f0A70b2F368129C8a45fC88aE32\",\n                \"attributes\": [\n                    {\n                        \"trait_type\": \"category\",\n                        \"value\": \"Paulie\"\n                    },\n                    {\n                        \"display_type\": \"date\",\n                        \"trait_type\": \"birthday\",\n                        \"value\": 1637239245\n                    }\n                ]\n            },\n            \"last_token_uri_sync\": null,\n            \"last_metadata_sync\": null,\n            \"minter_address\": null\n        },\n        {\n            \"token_address\": \"0x6d575f0314516367c9bd650f4f81ec127fbae79d\",\n            \"token_id\": \"22784\",\n            \"amount\": \"1\",\n            \"owner_of\": \"0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32\",\n            \"token_hash\": \"31645f9afe42001dc1d91ca540e3b3ed\",\n            \"block_number_minted\": \"16506558\",\n            \"block_number\": \"16506558\",\n            \"contract_type\": \"ERC721\",\n            \"name\": \"BadgeToken\",\n            \"symbol\": \"KBT\",\n            \"token_uri\": \"https://ipfs.moralis.io:2053/ipfs/QmXure1yHRjERnPqaZxW854B4MV7ELdUarNVidDkg2xguJ/22784\",\n            \"metadata\": {\n                \"image\": \"https://ipfs.io/ipfs/QmbJzq7AXM9yzqA9XMGYjbbqXKXsFNqtEVxBwLocZ51pBa\",\n                \"name\": \"Badge #22784\",\n                \"description\": \"The Kyoko badge is the first key you'll encounter after entering Kyoko's metaverse. Mint our badge and Join Kyoko's Discord. We're waiting for you!\"\n            },\n            \"last_token_uri_sync\": \"2022-07-11T14:04:21.422Z\",\n            \"last_metadata_sync\": \"2022-07-11T14:04:56.671Z\",\n            \"minter_address\": \"0xa01a04b7ad11aa640403c12fc2e2fcb7a0db5713\"\n        },\n        {\n            \"token_address\": \"0x6d575f0314516367c9bd650f4f81ec127fbae79d\",\n            \"token_id\": \"22783\",\n            \"amount\": \"1\",\n            \"owner_of\": \"0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32\",\n            \"token_hash\": \"826c4a3f1ee3a902f168bb8fccd554ec\",\n            \"block_number_minted\": \"16506551\",\n            \"block_number\": \"16506551\",\n            \"contract_type\": \"ERC721\",\n            \"name\": \"BadgeToken\",\n            \"symbol\": \"KBT\",\n            \"token_uri\": \"https://ipfs.moralis.io:2053/ipfs/QmXure1yHRjERnPqaZxW854B4MV7ELdUarNVidDkg2xguJ/22783\",\n            \"metadata\": {\n                \"image\": \"https://ipfs.io/ipfs/QmbJzq7AXM9yzqA9XMGYjbbqXKXsFNqtEVxBwLocZ51pBa\",\n                \"name\": \"Badge #22783\",\n                \"description\": \"The Kyoko badge is the first key you'll encounter after entering Kyoko's metaverse. Mint our badge and Join Kyoko's Discord. We're waiting for you!\"\n            },\n            \"last_token_uri_sync\": \"2022-07-11T16:46:38.166Z\",\n            \"last_metadata_sync\": \"2022-07-11T16:47:02.925Z\",\n            \"minter_address\": \"0x4ce839f279bd9588f6b8b7001f04ad72c2a12555\"\n        },\n        {\n            \"token_address\": \"0x6d575f0314516367c9bd650f4f81ec127fbae79d\",\n            \"token_id\": \"22782\",\n            \"amount\": \"1\",\n            \"owner_of\": \"0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32\",\n            \"token_hash\": \"0a6a2fb62119d5003109a4971668007b\",\n            \"block_number_minted\": \"16506542\",\n            \"block_number\": \"16506542\",\n            \"contract_type\": \"ERC721\",\n            \"name\": \"BadgeToken\",\n            \"symbol\": \"KBT\",\n            \"token_uri\": \"https://ipfs.moralis.io:2053/ipfs/QmXure1yHRjERnPqaZxW854B4MV7ELdUarNVidDkg2xguJ/22782\",\n            \"metadata\": {\n                \"image\": \"https://ipfs.io/ipfs/QmbJzq7AXM9yzqA9XMGYjbbqXKXsFNqtEVxBwLocZ51pBa\",\n                \"name\": \"Badge #22782\",\n                \"description\": \"The Kyoko badge is the first key you'll encounter after entering Kyoko's metaverse. Mint our badge and Join Kyoko's Discord. We're waiting for you!\"\n            },\n            \"last_token_uri_sync\": \"2022-07-11T14:06:43.936Z\",\n            \"last_metadata_sync\": \"2022-07-11T14:07:02.489Z\",\n            \"minter_address\": \"0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Nft by address V2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{devNft}}/v2/bsc/address/:address?size=2&page=1",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"v2",
								"bsc",
								"address",
								":address"
							],
							"query": [
								{
									"key": "size",
									"value": "2"
								},
								{
									"key": "page",
									"value": "1"
								}
							],
							"variable": [
								{
									"key": "address",
									"value": "0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32"
								}
							]
						},
						"description": "Get Nft by the given address (v2)"
					},
					"response": [
						{
							"name": "Get Nft by address V2",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{devNft}}/v2/bsc/address/:address?size=2&page=1",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"v2",
										"bsc",
										"address",
										":address"
									],
									"query": [
										{
											"key": "size",
											"value": "2"
										},
										{
											"key": "page",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "address",
											"value": "0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 7,\n    \"result\": [\n        {\n            \"token_address\": \"0xfa9b79769adc9bc9684d770586ed0a3a1074139d\",\n            \"token_id\": \"6\",\n            \"amount\": \"1\",\n            \"owner_of\": \"0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32\",\n            \"token_hash\": \"b107087cdd8bb8d6c1bd399b5645245b\",\n            \"block_number_minted\": \"21706808\",\n            \"block_number\": \"21728048\",\n            \"contract_type\": \"ERC1155\",\n            \"name\": \"Euler Tools Guestbook\",\n            \"symbol\": \"EULERBOOK\",\n            \"token_uri\": \"https://nft.api.prod.euler.tools/nft/50d3ec51-c5bb-4e76-b4c7-3de09e26df4a/info.json\",\n            \"metadata\": {\n                \"name\": \"AWS Iberia Fintech Day 2022\",\n                \"description\": \"Evento de AWS en Madrid el día Miércoles 28 de Septiembre\",\n                \"image\": \"https://nft.assets.prod.euler.tools/nft/50d3ec51-c5bb-4e76-b4c7-3de09e26df4a/image.jpeg\",\n                \"attributes\": [\n                    {\n                        \"name\": \"location\",\n                        \"value\": \"Madrid\",\n                        \"trait_type\": \"Location\"\n                    },\n                    {\n                        \"name\": \"date_from\",\n                        \"display_type\": \"date\",\n                        \"value\": \"Sun, 27 Sep 2020 22:00:00 GMT\",\n                        \"trait_type\": \"Date From\"\n                    },\n                    {\n                        \"name\": \"date_to\",\n                        \"display_type\": \"date\",\n                        \"value\": \"Sun, 27 Sep 2020 22:00:00 GMT\",\n                        \"trait_type\": \"Date To\"\n                    }\n                ],\n                \"setting\": {\n                    \"start_date_mint\": \"Tue, 27 Sep 2022 20:56:00 GMT\",\n                    \"max_total_supply\": \"1000\",\n                    \"end_date_mint\": \"Thu, 27 Oct 2022 20:57:00 GMT\"\n                }\n            },\n            \"last_token_uri_sync\": \"2022-09-27T21:02:19.056Z\",\n            \"last_metadata_sync\": \"2022-09-27T21:02:22.858Z\"\n        },\n        {\n            \"token_address\": \"0xfa9b79769adc9bc9684d770586ed0a3a1074139d\",\n            \"token_id\": \"5\",\n            \"amount\": \"1\",\n            \"owner_of\": \"0xc1f4fd1196953f0a70b2f368129c8a45fc88ae32\",\n            \"token_hash\": \"a28d7e5a46a0eafbac8fbcb22b5f1ed2\",\n            \"block_number_minted\": \"21134297\",\n            \"block_number\": \"21176158\",\n            \"contract_type\": \"ERC1155\",\n            \"name\": \"Euler Tools Guestbook\",\n            \"symbol\": \"EULERBOOK\",\n            \"token_uri\": \"https://nft.api.prod.euler.tools/nft/c1bcadc7-3c5b-497a-82a2-a605ccda2a4d/info.json\",\n            \"metadata\": {\n                \"name\": \"Partnership with SuperReal\",\n                \"description\": \"Partnership with SuperReal to tokenize the metaverse\",\n                \"image\": \"https://nft.assets.prod.euler.tools/nft/c1bcadc7-3c5b-497a-82a2-a605ccda2a4d/image.png\",\n                \"attributes\": [\n                    {\n                        \"name\": \"location\",\n                        \"value\": \"https://euler.tools/\",\n                        \"trait_type\": \"Location\"\n                    },\n                    {\n                        \"display_type\": \"date\",\n                        \"name\": \"date_from\",\n                        \"value\": \"Tue, 06 Sep 2022 22:00:00 GMT\",\n                        \"trait_type\": \"Date From\"\n                    },\n                    {\n                        \"display_type\": \"date\",\n                        \"name\": \"date_to\",\n                        \"value\": \"Tue, 06 Sep 2022 22:00:00 GMT\",\n                        \"trait_type\": \"Date To\"\n                    }\n                ],\n                \"setting\": {\n                    \"start_date_mint\": \"Tue, 06 Sep 2022 22:00:00 GMT\",\n                    \"max_total_supply\": \"2000\",\n                    \"end_date_mint\": null\n                }\n            },\n            \"last_token_uri_sync\": \"2022-09-07T21:02:37.314Z\",\n            \"last_metadata_sync\": \"2022-09-07T21:02:49.257Z\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Marketplace Nft",
			"item": [
				{
					"name": "Creates NFT",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{devNft}}/marketplace/ad",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"marketplace",
								"ad"
							]
						},
						"description": "Creates an NFT"
					},
					"response": [
						{
							"name": "Create NFT",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_sub\": \"c998144d-f4a5-409c-bd12-ca93691d03e9\",\r\n    \"signature\": {\r\n        \"value\": \"0xabf3e680174d5994fbc92b203e7bcc6c82c049f523e6a359dd57564dc3f58ff3\",\r\n        \"v\": \"0x1c\",\r\n        \"r\": \"0x0ffe8ad71466b9bdb33aa93bcab50d0622654a9ec09dcf47a17e67145fa7c86f\",\r\n        \"s\": \"0x239bdb51d9a24ba7a690ebd29116087ec2b60fefdece06fce1fabf190d7935fa\"\r\n    },\r\n    \"base_token_name\": \"paisaje_supply_10\",\r\n    \"base_token_address\": \"0x9881481df34974c2cb17157ae3c3cd209831707f\",\r\n    \"base_token_id\": \"115540776186829682179538218970689677199930016646310594916348377604677096332212\",\r\n    \"base_token_quantity\": 1,\r\n    \"quote_token_name\": \"BNB\",\r\n    \"quote_token_symbol\": \"BNB\",\r\n    \"quote_token_address\": \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\r\n    \"quote_token_quantity\": 1,\r\n    \"close_date\": 0,\r\n    \"blockchain_name\": \"bsctest\",\r\n    \"blockchain_id\": 97,\r\n    \"terms\": \"terms\",\r\n    \"seller_wallet\": \"0x5b4233f2ad4a36dc7eb0e64abe7d092ef6326279\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://nft.api.dev.euler.tools/marketplace/ad",
									"protocol": "https",
									"host": [
										"nft",
										"api",
										"dev",
										"euler",
										"tools"
									],
									"path": [
										"marketplace",
										"ad"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 200,\n    \"description\": \"Successful request\",\n    \"payload\": {\n        \"identifier\": \"3f412f58-3e5c-43c3-9f0a-69f1964241a4\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get all NFT",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{devNft}}/marketplace/ad/search",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"marketplace",
								"ad",
								"search"
							]
						},
						"description": "Get all NFT"
					},
					"response": [
						{
							"name": "Ad Search",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{devNft}}/marketplace/ad/search",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"marketplace",
										"ad",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 3,\n    \"results\": [\n        {\n            \"seller_wallet\": \"address_signature\",\n            \"base_token_address\": \"0x9881481df34974c2cb17157ae3c3cd209831707f\",\n            \"identifier\": \"a2e34a18-7002-4e70-8aac-76211c4afb35\",\n            \"close_date\": 0,\n            \"blockchain_id\": \"97\",\n            \"quote_token_name\": \"BNB\",\n            \"base_token_id\": \"98573941562297697713819106013762018575545785116019630606780014183091713679564\",\n            \"update_date\": \"2022-10-13T13:33:31.242Z\",\n            \"quote_token_address\": \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n            \"base_token_quantity\": 1,\n            \"quote_token_quantity\": 1,\n            \"terms\": \"Test\",\n            \"quote_token_symbol\": \"BNB\",\n            \"blockchain_name\": \"bsctest\",\n            \"create_date\": \"2022-10-13T13:33:31.242Z\",\n            \"base_token_name\": \"Nft Test 1\"\n        },\n        {\n            \"base_token_address\": \"0x9881481df34974c2cb17157ae3c3cd209831707f\",\n            \"seller_wallet\": \"0xf8cc73d7f562aac495729dbe71f8fca0ee48ffc7\",\n            \"identifier\": \"9fb1d882-528b-419b-ba67-1c9167769af0\",\n            \"close_date\": 0,\n            \"blockchain_id\": 97,\n            \"quote_token_name\": \"BNB\",\n            \"base_token_id\": \"114768091031391630999878723008401814686629115382750493497755194550053553208154\",\n            \"update_date\": \"2022-10-27T20:38:32.710Z\",\n            \"quote_token_address\": \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n            \"quote_token_quantity\": 1,\n            \"base_token_quantity\": 1,\n            \"terms\": \"dsfdsgfsdfsdfsdfsd sdfsdfsdfsd\",\n            \"quote_token_symbol\": \"BNB\",\n            \"blockchain_name\": \"bsctest\",\n            \"create_date\": \"2022-10-27T20:38:32.710Z\",\n            \"base_token_name\": \"Parzival\"\n        },\n        {\n            \"base_token_address\": \"0x9881481df34974c2cb17157ae3c3cd209831707f\",\n            \"seller_wallet\": \"0x5b4233f2ad4a36dc7eb0e64abe7d092ef6326279\",\n            \"identifier\": \"4e8998b1-03d5-46d9-98e8-03a2459d584f\",\n            \"close_date\": 0,\n            \"blockchain_id\": 97,\n            \"quote_token_name\": \"BNB\",\n            \"base_token_id\": \"14220536809117101465184671544436581024856603599618147969562087750727012009726\",\n            \"update_date\": \"2022-10-27T16:35:36.048Z\",\n            \"quote_token_address\": \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n            \"quote_token_quantity\": 1,\n            \"base_token_quantity\": 1,\n            \"terms\": \"fvbxfsfsf\",\n            \"quote_token_symbol\": \"BNB\",\n            \"blockchain_name\": \"bsctest\",\n            \"create_date\": \"2022-10-27T16:35:36.048Z\",\n            \"base_token_name\": \"test_wrong_error\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Buy Marketplace NFT",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{devNft}}/marketplace/ad/:identifier/buy",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"marketplace",
								"ad",
								":identifier",
								"buy"
							],
							"variable": [
								{
									"key": "identifier",
									"value": "55dd332c-a297-4f6b-b251-72c88d8649ee"
								}
							]
						},
						"description": "Buy NFT"
					},
					"response": []
				},
				{
					"name": "Get NFT by user id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{devNft}}/marketplace/ad/:id",
							"host": [
								"{{devNft}}"
							],
							"path": [
								"marketplace",
								"ad",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "55dd332c-a297-4f6b-b251-72c88d8649ee"
								}
							]
						},
						"description": "Get NFT"
					},
					"response": [
						{
							"name": "Get NFT by user id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{devNft}}/marketplace/ad/:id",
									"host": [
										"{{devNft}}"
									],
									"path": [
										"marketplace",
										"ad",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "55dd332c-a297-4f6b-b251-72c88d8649ee"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 1,\n    \"results\": {\n        \"seller_wallet\": \"address_signature\",\n        \"base_token_address\": \"0x9881481df34974c2cb17157ae3c3cd209831707f\",\n        \"identifier\": \"a2e34a18-7002-4e70-8aac-76211c4afb35\",\n        \"close_date\": 0,\n        \"blockchain_id\": \"97\",\n        \"quote_token_name\": \"BNB\",\n        \"base_token_id\": \"98573941562297697713819106013762018575545785116019630606780014183091713679564\",\n        \"update_date\": \"2022-10-13T13:33:31.242Z\",\n        \"quote_token_address\": \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n        \"base_token_quantity\": 1,\n        \"quote_token_quantity\": 1,\n        \"terms\": \"Test\",\n        \"quote_token_symbol\": \"BNB\",\n        \"blockchain_name\": \"bsctest\",\n        \"create_date\": \"2022-10-13T13:33:31.242Z\",\n        \"base_token_name\": \"Nft Test 1\"\n    }\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "OAuth2ClientId",
			"value": "eyJraWQiOiI0VmtFWUg2RXlpV3VLdUdINlArQ0JkZDd5MnZ1RHJtczk4WU04YlpZQTBNPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIwM2Q3ZjNmMC1jOGUzLTQyZjEtYWU2My01M2E2Y2ZhZWE4MjAiLCJjb2duaXRvOmdyb3VwcyI6WyJhZG1pbmlzdHJhdG9yc2dyb3VwLTFyajRwNmlXWG5DcCJdLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiY29nbml0bzpwcmVmZXJyZWRfcm9sZSI6ImFybjphd3M6aWFtOjozNTY3ODM2ODI5MTI6cm9sZVwvb3BlbnNlYXJjaC1jYXRhbG9ncy1zdGFjay1hZG1pbmlzdHJhdG9yc2dyb3Vwcm9sZUItWDBTSjVEM1o3NjNKIiwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfMDZuc1dUaW50IiwiY29nbml0bzp1c2VybmFtZSI6IjAzZDdmM2YwLWM4ZTMtNDJmMS1hZTYzLTUzYTZjZmFlYTgyMCIsIm9yaWdpbl9qdGkiOiI3YzIwY2E1MS1iYzA2LTQ1NDktOTdjZi01Y2UzZjkxODdhODMiLCJjb2duaXRvOnJvbGVzIjpbImFybjphd3M6aWFtOjozNTY3ODM2ODI5MTI6cm9sZVwvb3BlbnNlYXJjaC1jYXRhbG9ncy1zdGFjay1hZG1pbmlzdHJhdG9yc2dyb3Vwcm9sZUItWDBTSjVEM1o3NjNKIl0sImF1ZCI6IjdscGp0ZHY3MzFpZWdxbTFudmJvMXEyN2wzIiwiZXZlbnRfaWQiOiI2YWQxODFkMC1kMTZmLTQ3MTEtOGY1Mi05ZjFiODUwNjNiZTciLCJ0b2tlbl91c2UiOiJpZCIsImF1dGhfdGltZSI6MTY1OTkwNTczMywiZXhwIjoxNjYwOTMwNTkyLCJpYXQiOjE2NjA5MjY5OTIsImp0aSI6IjliNzc2NDg0LTUyMWYtNGE3Yy1iODAwLTZkMDE1MzQ1MmRmNCIsImVtYWlsIjoidG9tYXNnQGV1bGVyLnRvb2xzIn0.yGrQQ5uFmYtEsiZlougHgI-mUNpAwEi1yBrkTGSxmjxnmltngct6NfLxLynCH2Odf8nMDShLj76lcVEsihfG2AEaqBIiqgjX1IIR9FELCPaeNv1s_iotjwQHdnB3KTGmxXnjEWzvbNS6yWfPb87ZDdYuPqbSYTMFnNlqCKNzmFQEPA9gaaWHxDdPyP7FEyKgU5xdlsvDaYoZWsZY5MzeCFKoZQ7feZ_wX9bnHjRcol6sRNZx3JmFaca-CMwHNCF7rlOnFtK-moPIMEDtf6SaHIHwjtLUIFz7i8n4bQagyGJT4n-k8obZcyhDk3xjzuBGinbGqq-9MUeUKN92yuaOwQ"
		}
	]
}